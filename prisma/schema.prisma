// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  phone    String
  password String
  token    Token?

  wishlist Wishlist?
  cart     Cart?
  orders   Order[]
  
}

model Token {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId @unique
  refreshToken String @db.String
}

model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  image       String
  price       String
  description String

  size Size[]

  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  wishlistId String   @db.ObjectId

  cart       Cart     @relation(fields: [cartId], references: [id])
  cartId     String   @db.ObjectId

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @db.ObjectId

  order      Order?    @relation(fields: [orderId], references: [id])
  orderId    String?   @db.ObjectId
}

model Size {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]
}

model Wishlist {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  products Product[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique @db.ObjectId
}

model Cart {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  products Product[]
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique @db.ObjectId
}

model Order {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  address Address?

  products Product[]
  user     User?     @relation(fields: [userId], references: [id])
  userId   String?   @db.ObjectId
}

type Address {
  street String
  city String
  state String
  zip String
}